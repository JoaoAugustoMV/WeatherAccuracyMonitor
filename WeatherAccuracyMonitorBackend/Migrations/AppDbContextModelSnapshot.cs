// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WeatherAccuracyMonitorBackend.Infra.AppDbContext;

#nullable disable

namespace WeatherAccuracyMonitorBackend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WeatherAccuracyMonitorBackend.Domain.Entities.ForecastInfoDay", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<int>("DayCode")
                        .HasColumnType("integer");

                    b.Property<int>("DayX")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("ForecastDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("MaxTemperatureForecastMadeMinusX")
                        .HasColumnType("double precision");

                    b.Property<double>("MinTemperatureForecastMadeMinusX")
                        .HasColumnType("double precision");

                    b.Property<double>("RealTemperatureMax")
                        .HasColumnType("double precision");

                    b.Property<double>("RealTemperatureMin")
                        .HasColumnType("double precision");

                    b.Property<int>("Source")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("forecast_info_day", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
